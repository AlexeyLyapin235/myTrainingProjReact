{"version":3,"sources":["tocartsTools.js"],"names":["useTocartTools","getTocarts","setUrl","setName","setPrice","tocart","addTocartBasket","addCount","dispatch","addTocart","price","name","url","id","basket","count","findElem","findIndex","el","adminToolAddTocart","keyCollection","Date","now","db","title","comment","useGetTocarts","removeTocart","adminAddTocart","q","querySnapshot","forEach","doc","data","deleteTocartHome"],"mappings":"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","sourcesContent":["import { useDispatch } from \"react-redux\";\r\n\r\nimport { db } from \"..\";\r\nimport {\r\n  collection,\r\n  query,\r\n  getDocs,\r\n  deleteDoc,\r\n  setDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\n\r\nexport const useTocartTools = (\r\n  getTocarts,\r\n  setUrl,\r\n  setName,\r\n  setPrice,\r\n  tocart,\r\n  addTocartBasket,\r\n  addCount\r\n) => {\r\n  const dispatch = useDispatch();\r\n  const addTocart = (price, name, url, id) => {\r\n    const basket = {\r\n      price,\r\n      name,\r\n      url,\r\n      count: 1,\r\n      id,\r\n    };\r\n    const findElem = tocart.findIndex((el) => el.id === basket.id);\r\n    findElem === -1\r\n      ? dispatch(addTocartBasket(basket))\r\n      : dispatch(addCount(findElem));\r\n  };\r\n \r\n  const adminToolAddTocart = async (url, name, price) => {\r\n    if (url && name && price !== \"\") {\r\n      const keyCollection = Date.now();\r\n      await setDoc(doc(db, \"test\", `${keyCollection}`), {\r\n        url: url,\r\n        title: name,\r\n        price: price,\r\n        id: keyCollection,\r\n        comment: [],\r\n      });\r\n      setUrl(\"\");\r\n      setName(\"\");\r\n      setPrice(\"\");\r\n      getTocarts();\r\n    }\r\n  };\r\n  return [addTocart, adminToolAddTocart];\r\n};\r\n\r\nexport const useGetTocarts = (removeTocart, adminAddTocart) => {\r\n  const dispatch = useDispatch();\r\n  const getTocarts = async () => {\r\n    dispatch(removeTocart([]));\r\n    const q = query(collection(db, \"test\"));\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      dispatch(adminAddTocart(doc.data()));\r\n    });\r\n  };\r\n  const deleteTocartHome = async (id) => {\r\n    await deleteDoc(doc(db, \"test\", `${id}`));\r\n    getTocarts();\r\n  };\r\n  return { getTocarts, deleteTocartHome };\r\n};\r\n"],"file":"tocartsTools.dev.js"}